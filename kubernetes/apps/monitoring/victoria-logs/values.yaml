        global:
          imagePullSecrets: []
          image:
            registry: ""
          compatibility:
            openshift:
              adaptSecurityContext: "auto"
          cluster:
            dnsDomain: cluster.local.

        printNotes: true

        common:
          image:
            tag: ""

        serviceAccount:
          create: true
          name: ""
          extraLabels: {}
          annotations: {}
          automountToken: true

        nameOverride: ""
        extraObjects: []

        vlselect:
          enabled: true
          name: ""
          strategy: {}
          image:
            registry: ""
            repository: victoriametrics/victoria-logs
            tag: ""
            variant: victorialogs
            pullPolicy: IfNotPresent
          lifecycle: {}
          ports:
            name: "http"
          priorityClassName: ""
          fullnameOverride: ""
          suppressStorageFQDNsRender: false
          extraArgs:
            envflag.enable: true
            loggerFormat: json
            httpListenAddr: :9471
          terminationGracePeriodSeconds: 60
          annotations: {}
          extraLabels: {}
          podLabels: {}
          env: []
          envFrom: []
          probe:
            readiness:
              httpGet: {}
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              failureThreshold: 10
            liveness:
              tcpSocket: {}
              initialDelaySeconds: 5
              periodSeconds: 15
              timeoutSeconds: 5
              failureThreshold: 3
            startup: {}
          horizontalPodAutoscaler:
            enabled: false
            maxReplicas: 10
            minReplicas: 2
            metrics: []
            behavior: {}
          extraVolumes: []
          extraVolumeMounts: []
          extraContainers: []
          initContainers: []
          podDisruptionBudget:
            enabled: false
            labels: {}
          tolerations: []
          nodeSelector: {}
          affinity: {}
          topologySpreadConstraints: []
          podAnnotations: {}
          replicaCount: 2
          containerWorkingDir: ""
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: "200m"
              memory: 512Mi
          podSecurityContext:
            enabled: true
            fsGroup: 1000
          securityContext:
            enabled: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          service:
            enabled: true
            annotations: {}
            labels: {}
            clusterIP: ""
            externalIPs: []
            extraPorts: []
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            servicePort: 9471
            targetPort: http
            type: ClusterIP
            healthCheckNodePort: ""
            externalTrafficPolicy: ""
            ipFamilyPolicy: ""
            ipFamilies: []
          ingress:
            enabled: true
            ingressClassName: "internal"
            annotations:
              kubernetes.io/cluster-issuer: "letsencrypt-production"
            hosts:
              - logs.wakkalabs.com
            paths:
              - /select
            pathType: Prefix
            tls:
              - secretName: vlselect-ingress-tls
                hosts:
                  - logs.wakkalabs.com
          vmServiceScrape:
            enabled: true
            useServiceMonitor: false
            namespace: ""
            extraLabels: {}
            annotations: {}
            spec:
              endpoints:
                - port: http
                  interval: 30s
                  scrapeTimeout: 5s

        vlinsert:
          enabled: false
          name: ""
          strategy: {}
          image:
            registry: ""
            repository: victoriametrics/victoria-logs
            tag: ""
            variant: victorialogs
            pullPolicy: IfNotPresent
          lifecycle: {}
          ports:
            name: "http"
          priorityClassName: ""
          fullnameOverride: ""
          extraArgs:
            envflag.enable: true
            loggerFormat: json
            httpListenAddr: :9481
          annotations: {}
          extraLabels: {}
          podLabels: {}
          terminationGracePeriodSeconds: 30
          env: []
          envFrom: []
          suppressStorageFQDNsRender: false
          excludeStorageIDs: []
          probe:
            readiness:
              httpGet: {}
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              failureThreshold: 10
            liveness:
              tcpSocket: {}
              initialDelaySeconds: 5
              periodSeconds: 15
              timeoutSeconds: 5
              failureThreshold: 3
            startup: {}
          horizontalPodAutoscaler:
            enabled: false
            maxReplicas: 10
            minReplicas: 2
            metrics: []
            behavior: {}
          extraVolumes: []
          extraVolumeMounts: []
          extraContainers: []
          initContainers: []
          podDisruptionBudget:
            enabled: false
            labels: {}
          tolerations: []
          nodeSelector: {}
          affinity: {}
          topologySpreadConstraints: []
          podAnnotations: {}
          replicaCount: 2
          containerWorkingDir: ""
          resources:
            limits:
              cpu: "1"
              memory: 1.5Gi
            requests:
              cpu: "200m"
              memory: 512Mi
          podSecurityContext:
            enabled: true
            fsGroup: 1000
          securityContext:
            enabled: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          service:
            enabled: true
            annotations: {}
            labels: {}
            clusterIP: ""
            externalIPs: []
            extraPorts: []
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            servicePort: 9481
            targetPort: http
            type: ClusterIP
            healthCheckNodePort: ""
            externalTrafficPolicy: ""
            ipFamilyPolicy: ""
            ipFamilies: []
          ingress:
            enabled: false
            annotations: {}
            extraLabels: {}
            hosts:
              - name: vlinsert.local
                path:
                  - /insert
                port: http
            tls: []
            ingressClassName: ""
            pathType: Prefix
          vmServiceScrape:
            enabled: false
            useServiceMonitor: false
            namespace: ""
            extraLabels: {}
            annotations: {}
            spec:
              endpoints:
                - port: http

        vlstorage:
          enabled: true
          name: ""
          image:
            registry: ""
            repository: victoriametrics/victoria-logs
            tag: ""
            variant: victorialogs
            pullPolicy: IfNotPresent
          lifecycle: {}
          ports:
            name: "http"
          priorityClassName: ""
          fullnameOverride: ""
          env: []
          envFrom: []
          retentionPeriod: 30d
          retentionDiskSpaceUsage: ""
          extraArgs:
            envflag.enable: true
            loggerFormat: json
            httpListenAddr: :9491
          extraVolumes: []
          extraVolumeMounts: []
          extraContainers: []
          initContainers: []
          podDisruptionBudget:
            enabled: false
            labels: {}
          tolerations: []
          nodeSelector: {}
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/component
                        operator: In
                        values: ["vlstorage"]
                  topologyKey: "kubernetes.io/hostname"
          topologySpreadConstraints: []
          emptyDir: {}
          persistentVolume:
            enabled: true
            name: vlstorage-volume
            accessModes:
              - ReadWriteOnce
            annotations: {}
            labels: {}
            storageClassName: "ceph-block"
            existingClaim: ""
            mountPath: /storage
            size: 50Gi
            subPath: ""
          podAnnotations: {}
          annotations: {}
          extraLabels: {}
          podLabels: {}
          replicaCount: 2
          containerWorkingDir: ""
          podManagementPolicy: OrderedReady
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "500m"
              memory: 1Gi
          podSecurityContext:
            enabled: true
            fsGroup: 1000
          securityContext:
            enabled: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          service:
            enabled: true
            annotations: {}
            clusterIP: None
            type: ClusterIP
            labels: {}
            servicePort: 9491
            targetPort: http
            extraPorts: []
            healthCheckNodePort: ""
            externalTrafficPolicy: ""
            ipFamilyPolicy: ""
            ipFamilies: []
          terminationGracePeriodSeconds: 60
          minReadySeconds: 5
          probe:
            readiness:
              httpGet: {}
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              failureThreshold: 10
            startup: {}
          horizontalPodAutoscaler:
            enabled: false
            maxReplicas: 10
            minReplicas: 2
            metrics: []
            behavior:
              scaleDown:
                selectPolicy: Disabled
          vmServiceScrape:
            enabled: true
            useServiceMonitor: false
            namespace: ""
            extraLabels: {}
            annotations: {}
            spec:
              endpoints:
                - port: http
                  interval: 30s
                  scrapeTimeout: 5s

        vmauth:
          enabled: false
          name: ""
          configSecretName: ""
          config: {}
          strategy: {}
          image:
            registry: ""
            repository: victoriametrics/vmauth
            tag: "v1.116.0"
            pullPolicy: IfNotPresent
          lifecycle: {}
          ports:
            name: "http"
          priorityClassName: ""
          fullnameOverride: ""
          extraArgs:
            envflag.enable: true
            loggerFormat: json
            httpListenAddr: :8427
          annotations: {}
          extraLabels: {}
          podLabels: {}
          env: []
          envFrom: []
          probe:
            readiness:
              httpGet: {}
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              failureThreshold: 10
            liveness:
              tcpSocket: {}
              initialDelaySeconds: 5
              periodSeconds: 15
              timeoutSeconds: 5
              failureThreshold: 3
            startup: {}
          horizontalPodAutoscaler:
            enabled: false
            maxReplicas: 10
            minReplicas: 2
            metrics: []
            behavior: {}
          extraVolumes: []
          extraVolumeMounts: []
          extraContainers: []
          initContainers: []
          podDisruptionBudget:
            enabled: false
            labels: {}
          tolerations: []
          nodeSelector: {}
          affinity: {}
          topologySpreadConstraints: []
          podAnnotations: {}
          replicaCount: 2
          containerWorkingDir: ""
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          podSecurityContext:
            enabled: true
            fsGroup: 1000
          securityContext:
            enabled: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          service:
            enabled: true
            annotations: {}
            labels: {}
            clusterIP: ""
            externalIPs: []
            extraPorts: []
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            servicePort: 8427
            targetPort: http
            type: ClusterIP
            healthCheckNodePort: ""
            externalTrafficPolicy: ""
            ipFamilyPolicy: ""
            ipFamilies: []
          ingress:
            enabled: false
            annotations: {}
            extraLabels: {}
            hosts:
              - name: vmauth.local
                path:
                  - /insert
                port: http
            tls: []
            pathType: Prefix
          vmServiceScrape:
            enabled: false
            useServiceMonitor: false
            namespace: ""
            extraLabels: {}
            annotations: {}
            spec:
              endpoints:
                - port: http

        vector:
          enabled: true
          role: Agent
          dataDir: /vector-data-dir
          resources:
            limits:
              cpu: "500m"
              memory: "1Gi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          args:
            - -w
            - --config-dir
            - /etc/vector/
          containerPorts:
            - name: prom-exporter
              containerPort: 9090
              protocol: TCP
          service:
            enabled: true
          existingConfigMaps: []
          customConfigNamespace: ""
          customConfig:
            data_dir: /vector-data-dir
            api:
              enabled: false
              address: 0.0.0.0:8686
              playground: true
            sources:
              k8s:
                type: kubernetes_logs
              journal_logs:
                type: journald
                include_units:
                  - kubelet.service
                  - containerd.service
                  - talos.service
              internal_metrics:
                type: internal_metrics
            transforms:
              kubernetes_filter:
                type: filter
                inputs: ["k8s"]
                condition: 'true'
              add_host_metadata:
                type: add_fields
                inputs: ["journal_logs"]
                fields:
                  node: "${HOSTNAME}"
            sinks:
              exporter:
                type: prometheus_exporter
                address: 0.0.0.0:9090
                inputs: ["internal_metrics"]
              vlogs:
                type: elasticsearch
                inputs: ["kubernetes_filter", "add_host_metadata"]
                endpoints: ["http://{{ include "victoria-logs-cluster.vlselect.fullname" . }}:9471"]
                bulk:
                  index: logs
                compression: gzip
                healthcheck:
                  enabled: false
                request:
                  headers:
                    VL-Time-Field: timestamp
                    VL-Stream-Fields: stream,kubernetes.pod_name,kubernetes.container_name,kubernetes.pod_namespace
                    VL-Msg-Field: message,msg,_msg,log.msg,log.message,log
                    AccountID: "0"
                    ProjectID: "0"
          extraVolumeMounts:
            - name: journal
              mountPath: /var/log/journal
              readOnly: true
            - name: machine-id
              mountPath: /etc/machine-id
              readOnly: true
          extraVolumes:
            - name: journal
              hostPath:
                path: /var/log/journal
            - name: machine-id
              hostPath:
                path: /etc/machine-id