# VictoriaLogs Cluster configuration with Talos integration

# Global settings (keeping the same)
global:
  imagePullSecrets: []

# Keep your existing VictoriaLogs components the same
vlselect:
  enabled: true
  replicaCount: 2
  service:
    enabled: true
    type: ClusterIP
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    extraLabels: {}
    hosts:
      - name: logs.wakkalabs.com
        path:
          - /select
        port: http
    tls:
      - secretName: vlogs-select-tls
        hosts:
          - logs.wakkalabs.com
    ingressClassName: nginx
    pathType: Prefix
  vmServiceScrape:
    enabled: true
    useServiceMonitor: false
    extraLabels:
      release: victoria-metrics

vlinsert:
  enabled: true
  replicaCount: 2
  service:
    enabled: true
    type: ClusterIP
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    extraLabels: {}
    hosts:
      - name: logs.wakkalabs.com
        path:
          - /insert
        port: http
    tls:
      - secretName: vlogs-insert-tls
        hosts:
          - logs.wakkalabs.com
    ingressClassName: nginx
    pathType: Prefix
  vmServiceScrape:
    enabled: true
    useServiceMonitor: false
    extraLabels:
      release: victoria-metrics

vlstorage:
  enabled: true
  replicaCount: 2
  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 20Gi
  vmServiceScrape:
    enabled: true
    useServiceMonitor: false
    extraLabels:
      release: victoria-metrics

# VMAuth configuration remains the same
vmauth:
  enabled: true
  replicaCount: 2
  config:
    users:
      - username: "admin"
        password: "CHANGE_ME_AFTER_INSTALL"
        url_map:
          - src_paths:
              - "/select"
            dst_urls:
              - "http://vlogs-vlselect:9471"
          - src_paths:
              - "/insert"
            dst_urls:
              - "http://vlogs-vlinsert:9481"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    extraLabels: {}
    hosts:
      - name: logs.wakkalabs.com
        path:
          - /
        port: http
    tls:
      - secretName: vlogs-vmauth-tls
        hosts:
          - logs.wakkalabs.com
    ingressClassName: nginx
    pathType: Prefix
  vmServiceScrape:
    enabled: true
    useServiceMonitor: false
    extraLabels:
      release: victoria-metrics

# Updated Vector configuration to integrate with Talos
# Updated Vector configuration for Talos integration with correct VictoriaMetrics endpoints

vector:
  enabled: true
  # Set role to Stateless-Aggregator as requested
  role: "Stateless-Aggregator"

  # We need to create a service for the UDP sockets
  service:
    enabled: true
    type: LoadBalancer
    ports:
      - name: talos-kernel
        port: 6050
        protocol: UDP
        targetPort: 6050
      - name: talos-service
        port: 6051
        protocol: UDP
        targetPort: 6051

  # Expose the UDP ports in the Vector container
  containerPorts:
    - name: prom-exporter
      containerPort: 9090
      protocol: TCP
    - name: talos-kernel
      containerPort: 6050
      protocol: UDP
    - name: talos-service
      containerPort: 6051
      protocol: UDP

  # Custom configuration combining Talos and K8s logs
  customConfig:
    data_dir: /vector-data-dir
    api:
      enabled: true
      address: 0.0.0.0:8686

    # Sources configuration
    sources:
      # Keep Kubernetes logs source
      k8s:
        type: kubernetes_logs

      # Add Talos-specific sources
      talos_kernel_logs:
        address: 0.0.0.0:6050
        type: socket
        mode: udp
        max_length: 102400
        decoding:
          codec: json
        host_key: __host

      talos_service_logs:
        address: 0.0.0.0:6051
        type: socket
        mode: udp
        max_length: 102400
        decoding:
          codec: json
        host_key: __host

      internal_metrics:
        type: internal_metrics

    # Transforms configuration
    transforms:
      # Transform for Kubernetes logs
      k8s_parser:
        type: remap
        inputs: [ k8s ]
        source: |
          .log = parse_json(.message) ?? .message
          del(.message)

      # Transform for Talos kernel logs
      talos_kernel_logs_xform:
        type: remap
        inputs: [ talos_kernel_logs ]
        source: |
          # Add any needed transformations for kernel logs
          # Mark the source type
          .source_type = "talos_kernel"

      # Transform for Talos service logs
      talos_service_logs_xform:
        type: remap
        inputs: [ talos_service_logs ]
        source: |
          # Add any needed transformations for service logs
          # Mark the source type
          .source_type = "talos_service"

    # Sinks configuration
    sinks:
      # Send metrics to VictoriaMetrics using your actual service
      metrics:
        type: prometheus_remote_write
        inputs: [ internal_metrics ]
        endpoint: http://vminsert-victoria-metrics-k8s-stack:8480/api/v1/write

      # Send Kubernetes logs to VictoriaLogs
      k8s_logs:
        type: http
        inputs: [ k8s_parser ]
        method: post
        uri: http://vlogs-vlinsert:9481/insert/loki/api/v1/push
        encoding:
          codec: json
        headers:
          Content-Type: application/json
          VL-Time-Field: timestamp
          VL-Stream-Fields: stream,kubernetes.pod_name,kubernetes.container_name,kubernetes.pod_namespace
          VL-Msg-Field: message,msg,_msg,log.msg,log.message,log

      # Send Talos kernel logs to VictoriaLogs
      talos_kernel:
        type: http
        inputs: [ talos_kernel_logs_xform ]
        method: post
        uri: http://vlogs-vlinsert:9481/insert/loki/api/v1/push
        encoding:
          codec: json
          except_fields:
            - __host
        batch:
          max_bytes: 1048576
        headers:
          Content-Type: application/json
          VL-Time-Field: timestamp
          VL-Stream-Fields: hostname,facility,source_type
          VL-Msg-Field: message,msg
          VL-Out-Of-Order-Action: rewrite_timestamp

      # Send Talos service logs to VictoriaLogs
      talos_service:
        type: http
        inputs: [ talos_service_logs_xform ]
        method: post
        uri: http://vlogs-vlinsert:9481/insert/loki/api/v1/push
        encoding:
          codec: json
          except_fields:
            - __host
        batch:
          max_bytes: 400000
        headers:
          Content-Type: application/json
          VL-Time-Field: timestamp
          VL-Stream-Fields: hostname,service,source_type
          VL-Msg-Field: message,msg
          VL-Out-Of-Order-Action: rewrite_timestamp
