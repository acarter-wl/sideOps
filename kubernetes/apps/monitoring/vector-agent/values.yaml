role: "Agent"

customConfig:
  data_dir: /vector-data-dir

  sources:
    kubernetes_logs:
      type: kubernetes_logs

    talos_kernel_logs:
      address: 0.0.0.0:6050
      type: socket
      mode: udp
      max_length: 102400
      decoding:
        codec: json
      host_key: __host

    talos_service_logs:
      address: 0.0.0.0:6051
      type: socket
      mode: udp
      max_length: 102400
      decoding:
        codec: json
      host_key: __host

    internal_metrics:
      type: internal_metrics

  transforms:
    kubernetes_logs_transform:
      type: remap
      inputs: [kubernetes_logs]
      source: |
        .container = .kubernetes.container_name
        .pod = .kubernetes.pod_name
        .namespace = .kubernetes.pod_namespace
        .node = get_env_var("HOSTNAME") ?? "unknown"
        .log_type = "kubernetes"
        .timestamp = now()

    talos_kernel_transform:
      type: remap
      inputs: [talos_kernel_logs]
      source: |
        .node = .__host
        .facility = if exists(.facility) && .facility != null { .facility } else { "kernel" }
        .log_type = "talos_kernel"
        .timestamp = now()

    talos_service_transform:
      type: remap
      inputs: [talos_service_logs]
      source: |
        .node = .__host
        .service = if exists(.service) && .service != null { .service } else { "talos-service" }
        if exists(.msg) {
          msg = to_string(.msg) ?? ""
          if contains(msg, "machined") {
            .service = "machined"
          } else if contains(msg, "containerd") {
            .service = "containerd"
          } else if contains(msg, "kubelet") {
            .service = "kubelet"
          } else if contains(msg, "apid") {
            .service = "apid"
          } else if contains(msg, "trustd") {
            .service = "trustd"
          }
        }
        .log_type = "talos_service"
        .timestamp = now()

  sinks:
    loki_kubernetes:
      type: loki
      inputs: [kubernetes_logs_transform]
      request:
        headers:
          X-Scope-OrgID: "1"
      endpoint: http://loki-gateway.monitoring.svc.cluster.local
      encoding:
        codec: json
      labels:
        pod: "{{`{{ pod }}`}}"
        namespace: "{{`{{ namespace }}`}}"
        container: "{{`{{ container }}`}}"
        node: "{{`{{ node }}`}}"
        log_type: "kubernetes"
      batch:
        max_bytes: 1048576
        timeout_secs: 5
      out_of_order_action: rewrite_timestamp

    loki_talos_kernel:
      type: loki
      inputs: [talos_kernel_transform]
      endpoint: http://loki-gateway.monitoring.svc.cluster.local
      encoding:
        codec: json
        except_fields: [__host]
      labels:
        hostname: "{{`{{ node }}`}}"
        facility: "{{`{{ facility }}`}}"
        log_type: "talos_kernel"
      batch:
        max_bytes: 1048576
        timeout_secs: 5
      out_of_order_action: rewrite_timestamp

    loki_talos_service:
      type: loki
      inputs: [talos_service_transform]
      endpoint: http://loki-gateway.monitoring.svc.cluster.local
      encoding:
        codec: json
        except_fields: [__host]
      labels:
        hostname: "{{`{{ node }}`}}"
        service: "{{`{{ service }}`}}"
        log_type: "talos_service"
      batch:
        max_bytes: 1048576
        timeout_secs: 5
      out_of_order_action: rewrite_timestamp

    stdout:
      type: console
      inputs:
        - kubernetes_logs_transform
        - talos_kernel_transform
        - talos_service_transform
      encoding:
        codec: json

    prometheus:
      type: prometheus_exporter
      inputs:
        - internal_metrics
      address: "0.0.0.0:9598"

tolerations:
  - operator: Exists

service:
  type: LoadBalancer
  ports:
    - name: prom-exporter
      port: 9598
      targetPort: 9598
      protocol: TCP
    - name: talos-kernel
      port: 6050
      targetPort: 6050
      protocol: UDP
    - name: talos-service
      port: 6051
      targetPort: 6051
      protocol: UDP

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
