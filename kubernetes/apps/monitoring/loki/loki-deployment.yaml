---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: loki-memberlist
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http
      protocol: TCP
      port: 7946
      targetPort: memberlist-port
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-clusterrole
  namespace: monitoring
  labels:
    app: loki
rules:
  - verbs:
      - get
      - watch
      - list
    apiGroups: [ "" ]
    resources:
      - configMaps
      - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-clusterrolebinding
  labels:
    app: loki
subjects:
  - kind: ServiceAccount
    name: loki
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-clusterrole
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
data:
  config.yaml: |
    auth_enabled: false
    common:
      compactor_address: 'loki'
      path_prefix: /var/loki
      replication_factor: 1
      storage:
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
    compactor:
      compaction_interval: 60m
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
      retention_enabled: true
    frontend:
      compress_responses: true
      max_outstanding_per_tenant: 4096
    index_gateway:
      mode: ring
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      retention_period: 90d
      retention_stream:
      - period: 30d
        priority: 10
        selector: '{namespace="kube-system"}'
      - period: 30d
        priority: 11
        selector: '{namespace="monitoring"}'
    memberlist:
      join_members:
      - loki-memberlist
    querier:
      max_concurrent: 2048
    query_range:
      align_queries_with_step: true
      parallelise_shardable_queries: false
    query_scheduler:
      max_outstanding_requests_per_tenant: 4096
    ruler:
      storage:
        type: local
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2020-10-24"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
      - from: "2023-09-12"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v12
        store: tsdb
    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
    storage_config:
      hedging:
        at: "250ms"
        max_per_second: 20
        up_to: 3
    analytics:
      reporting_enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-runtime
  namespace: monitoring
  labels:
    app: loki
data:
  runtime-config.yaml: |
    {}
---
# ServiceMonitor for Loki
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: loki
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
  namespaceSelector:
    matchNames:
      - monitoring
---
# Promtail with updated configuration
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: monitoring
  labels:
    app: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
      annotations:
        prometheus.io/port: "3101"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: promtail
      volumes:
        - name: config
          configMap:
            name: promtail
        - name: run
          hostPath:
            path: /run/promtail
        - name: containers
          hostPath:
            path: /var/lib/docker/containers
        - name: pods
          hostPath:
            path: /var/log/pods
      containers:
        - name: promtail
          image: docker.io/grafana/promtail:2.6.1
          imagePullPolicy: IfNotPresent
          args:
            - '-config.file=/etc/promtail/promtail.yaml'
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
            - name: http-syslog
              containerPort: 1514
              protocol: TCP
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - name: containers
              readOnly: true
              mountPath: /var/lib/docker/containers
            - name: pods
              readOnly: true
              mountPath: /var/log/pods
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
---
# ServiceMonitor for Promtail
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: promtail
  namespace: monitoring
  labels:
    app: promtail
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: promtail
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
  namespaceSelector:
    matchNames:
      - monitoring
---
# Updated Promtail Service with metrics port
apiVersion: v1
kind: Service
metadata:
  name: promtail
  namespace: monitoring
  labels:
    app: promtail
spec:
  ports:
    - name: http-syslog
      protocol: TCP
      port: 1514
      targetPort: http-syslog
    - name: http-metrics
      protocol: TCP
      port: 3101
      targetPort: http-metrics
  selector:
    app: promtail
  type: LoadBalancer
  loadBalancerIP: 192.168.101.2
---
# Updated Loki Service with metrics port
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app: loki
  type: ClusterIP
