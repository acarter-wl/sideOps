# Complete End-to-End Loki and Promtail Configuration

# 1. ServiceAccounts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: monitoring
  labels:
    app: promtail

# 2. ClusterRoles and ClusterRoleBindings
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-clusterrole
  labels:
    app: loki
rules:
  - verbs:
      - get
      - watch
      - list
    apiGroups: [ "" ]
    resources:
      - configMaps
      - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-clusterrolebinding
  labels:
    app: loki
subjects:
  - kind: ServiceAccount
    name: loki
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
  labels:
    app: promtail
rules:
  - verbs:
      - get
      - watch
      - list
    apiGroups: [ "" ]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
  labels:
    app: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail

# 3. ConfigMaps
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-runtime
  namespace: monitoring
  labels:
    app: loki
data:
  runtime-config.yaml: |
    {}
# 4. PersistentVolumeClaim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-pvc
  namespace: monitoring
  labels:
    app: loki
spec:
  storageClassName: ceph-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 64Gi

# 5. Services
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  namespace: monitoring
  labels:
    app: loki
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
  selector:
    app: loki
---
apiVersion: v1
kind: Service
metadata:
  name: loki-memberlist
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - name: http
      protocol: TCP
      port: 7946
      targetPort: memberlist-port
  selector:
    app: loki
  type: ClusterIP

# 6. StatefulSet/DaemonSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki-headless
  template:
    metadata:
      labels:
        app: loki
      annotations:
        prometheus.io/port: "3100"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: loki
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
        runAsGroup: 10001
        runAsNonRoot: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: loki-config # Changed reference to new ConfigMap name
        - name: runtime-config
          configMap:
            name: loki-runtime
        - name: storage
          persistentVolumeClaim:
            claimName: loki-pvc
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=all
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist-port
              containerPort: 7946
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 128Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: storage
              mountPath: /var/loki
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true


# 7. ServiceMonitors
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: loki
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
  namespaceSelector:
    matchNames:
      - monitoring
