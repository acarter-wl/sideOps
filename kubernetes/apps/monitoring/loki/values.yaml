loki:
  auth_enabled: false
  commonConfig:
    replication_factor: 1
    path_prefix: /var/loki
    ring:
      kvstore:
        store: inmemory
  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      s3: null
      endpoint: minio.storage.svc.cluster.local:9000
      insecure: true
      bucketnames: loki-chunks
      access_key_id: ${MINIO_ROOT_USER}
      secret_access_key: ${MINIO_ROOT_PASSWORD}
      s3forcepathstyle: true
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 4
  limits_config:
    retention_period: 14d
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_cache_freshness_per_query: 10m
    ingestion_rate_mb: 10
    ingestion_burst_size_mb: 20

# Switch to the single binary deployment mode
deploymentMode: SingleBinary
singleBinary:
  replicas: 1
  extraArgs:
    - -config.expand-env=true

extraEnvFrom:
  - secretRef:
      name: minio-credentials

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0
minio:
  enabled: false  # We'll use the external minio instance
ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
