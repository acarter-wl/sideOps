global:
  dnsDomain: cluster.local
loki:
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
    ingester:
      chunk_encoding: snappy
    querier:
      # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
      max_concurrent: 4
    pattern_ingester:
       enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
      retention_period: 672h # 28 days retention
  storage_config:
    aws:
      region: us-east-1
      bucketnames: ceph-chunks
      s3forcepathstyle: true
      insecure: true

  storage:
    type: s3
    bucketNames:
        chunks: ceph-chunks
        ruler: ceph-ruler
        admin: ceph-admin
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or if you are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      s3: s3://S7RFA0US3ZM69ZVEIKRN:b5JsiA2vyY7UHAf2XqRTpo08soE2g0cBWvXiOh6J@http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local/ceph-chunks
      # AWS endpoint URL
      endpoint: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local
      # AWS region where the S3 bucket is located
      region: us-east-1
      # AWS secret access key
      secretAccessKey: b5JsiA2vyY7UHAf2XqRTpo08soE2g0cBWvXiOh6J
      # AWS access key ID
      accessKeyId: S7RFA0US3ZM69ZVEIKRN
      # AWS signature version (e.g., v2 or v4)
      signatureVersion: v4
      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: true
      # Allows insecure (HTTP) connections (true/false)
      insecure: true
      # HTTP configuration settings
      http_config: {}

deploymentMode: SimpleScalable

backend:
  replicas: 2
read:
  replicas: 2
write:
  replicas: 3

# Disable minio storage
minio:
  enabled: false

gateway:
  service:
    type: LoadBalancer
