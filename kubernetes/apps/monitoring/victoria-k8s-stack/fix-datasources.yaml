apiVersion: v1
kind: ConfigMap
metadata:
  name: victoria-metrics-k8s-stack-grafana-override
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "10" # Must run after main victoria-metrics-k8s-stack
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: VictoriaMetrics
      type: prometheus
      url: http://vm-victoria-metrics-k8s-stack-vmselect.monitoring.svc.cluster.local:8481
    - access: proxy
      isDefault: false
      jsonData:
        derivedFields:
        - datasourceName: Tempo
          datasourceUid: tempo
          matcherRegex: traceID=(\w+)
          name: TraceID
          url: $${__value.raw}
        maxLines: 1000
        timeout: 60
      name: Loki
      type: loki
      uid: loki
      url: http://loki-gateway.monitoring.svc.cluster.local:80
    - access: proxy
      isDefault: false
      jsonData:
        httpMethod: GET
        lokiSearch:
          datasourceUid: loki
        nodeGraph:
          enabled: true
        serviceMap:
          datasourceUid: VictoriaMetrics
        tracesToLogsV2:
          datasourceUid: loki
          filterByTraceID: true
          spanEndTimeShift: 1h
          spanStartTimeShift: -1h
          tags:
          - instance
          - pod
          - namespace
      name: Tempo
      type: tempo
      uid: tempo
      url: http://tempo.monitoring.svc.cluster.local:3100
    - access: proxy
      jsonData:
        implementation: prometheus
      name: Alertmanager
      type: prometheus
      url: http://victoria-metrics-k8s-stack-alertmanager.monitoring.svc.cluster.local:9093
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fix-grafana-datasources
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "20" # Must run after ConfigMap update
spec:
  template:
    spec:
      serviceAccountName: victoria-metrics-k8s-stack-grafana
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          cp /configmap/datasources.yaml /etc/grafana/provisioning/datasources/datasources.yaml
          kubectl rollout restart deployment victoria-metrics-k8s-stack-grafana -n monitoring
        volumeMounts:
        - name: configmap-volume
          mountPath: /configmap
      volumes:
      - name: configmap-volume
        configMap:
          name: victoria-metrics-k8s-stack-grafana-override
      restartPolicy: OnFailure
  backoffLimit: 2