namespaceOverride: monitoring
nameOverride: kube-prometheus-stack
fullnameOverride: kube-prometheus-stack

global:
  rbac:
    create: true
    pspEnabled: false # PSPs are deprecated in Kubernetes 1.25+

crds:
  enabled: true
  upgradeJob:
    enabled: true

# ================================
# ETCD Scraping for Talos
# ================================
kubeEtcd:
  endpoints:
    - 192.168.101.120
    - 192.168.101.121
    - 192.168.101.122
  service:
    selector:
      component: etcd
  serviceMonitor:
    scheme: https
    insecureSkipVerify: false
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-certs/etcd-ca.crt
    certFile: /etc/prometheus/secrets/etcd-certs/etcd-client.crt
    keyFile: /etc/prometheus/secrets/etcd-certs/etcd-client-key.key

# ================================
# Control Plane Components
# ================================
kubeControllerManager:
  endpoints:
    - 192.168.101.120
    - 192.168.101.121
    - 192.168.101.122

kubeScheduler:
  endpoints:
    - 192.168.101.120
    - 192.168.101.121
    - 192.168.101.122

# ================================
# Prometheus Configuration
# ================================
prometheus:
  prometheusSpec:
    secrets:
      - etcd-client-certs
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    scrapeInterval: 30s
    evaluationInterval: 30s
    replicas: 2
    resources:
      requests:
        memory: 2Gi
        cpu: 1000m
      limits:
        memory: 4Gi
        cpu: 2000m
    retention: 15d
    retentionSize: 90GB
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector:
      matchLabels:
        release: kube-prometheus-stack
    serviceMonitorNamespaceSelector: {}
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
    extraVolumes:
      - name: etcd-certs
        secret:
          secretName: etcd-client-certs
    extraVolumeMounts:
      - name: etcd-certs
        mountPath: /etc/prometheus/secrets/etcd-certs
        readOnly: true
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 50Gi
    additionalScrapeConfigs:
      - job_name: 'blackbox-homelab'
        metrics_path: /probe
        params:
          module: [ http_2xx ]
        static_configs:
          - targets:
              - https://sonarr.wakkalabs.com
              - https://radarr.wakkalabs.com
              - https://prowlarr.wakkalabs.com
              - https://ceph.wakkalabs.com
              - https://jellyfin.wakkalabs.com
              - https://jellyseerr.wakkalabs.com
              - https://nzbhydra.wakkalabs.com
              - https://sabnzbd.wakkalabs.com
              - https://qbittorrent.wakkalabs.com
              - https://argo.wakkalabs.com
              - https://alertmanager.wakkalabs.com
              - https://prometheus.wakkalabs.com
        relabel_configs:
          - source_labels: [ __address__ ]
            target_label: __param_target
          - source_labels: [ __param_target ]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter.monitoring.svc.cluster.local:9115
  ingress:
    enabled: true
    ingressClassName: internal
    annotations:
      kubernetes.io/ingress.class: internal
      internal-dns.alpha.kubernetes.io/enabled: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-production"
    hosts:
      - prometheus.wakkalabs.com
    path: /
    pathType: Prefix
    tls:
      - secretName: prometheus-wakkalabs-tls
        hosts:
          - prometheus.wakkalabs.com

# ================================
# Alertmanager Configuration
# ================================
alertmanager:
  enabled: true # This is default, but good to be explicit
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  replicas: 1
  service:
    ipFamilyPolicy: SingleStack
    ipFamilies:
      - IPv4
  ingress:
    enabled: true
    ingressClassName: internal
    annotations:
      kubernetes.io/ingress.class: internal
      internal-dns.alpha.kubernetes.io/enabled: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-production"
    hosts:
      - alertmanager.wakkalabs.com
    path: /
    pathType: Prefix
    tls:
      - secretName: alertmanager-wakkalabs-tls
        hosts:
          - alertmanager.wakkalabs.com

  # Optional but recommended: Add persistent storage
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 10Gi

# ================================
# Default Rules Configuration
# ================================
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    kubeApiserver: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesSystem: true
    kubernetesResources: true
    kubeControllerManager: true
    kubeScheduler: true
    kubernetesStorage: true
    prometheusOperator: true
  disabled:
    KubeControllerManagerDown: false
    KubeSchedulerDown: false
    KubeletTooManyPods: true

# ================================
# Grafana Configuration
# ================================
grafana:
  admin:
    existingSecret: grafana-admin-credentials
    userKey: admin-user
    passwordKey: admin-password
  enabled: true
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: "America/Chicago"
  defaultDashboardsEditable: true
  serviceMonitor:
    enabled: true
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      folder: /tmp/dashboards
      searchNamespace: ALL
      provider:
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      label: grafana_datasource
      searchNamespace: ALL
  persistence:
    enabled: true
    type: pvc
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    storageClassName: ceph-block
  ingress:
    enabled: true
    ingressClassName: internal
    annotations:
      kubernetes.io/ingress.class: internal
      cert-manager.io/cluster-issuer: "letsencrypt-production"
    hosts:
      - grafana.wakkalabs.com
    path: /
    pathType: Prefix
    tls:
      - secretName: grafana-wakkalabs-tls
        hosts:
          - grafana.wakkalabs.com

  # Additional Data Sources
  # additionalDataSources:
  #   - name: Tempo
  #     type: tempo
  #     uid: tempo
  #     access: proxy
  #     url: http://tempo.monitoring.svc.cluster.local:3100
  #     jsonData:
  #       httpMethod: GET
  #       lokiSearch:
  #         datasourceUid: loki
  #       tracesToLogs:
  #         datasourceUid: loki
  #         tags: ['instance', 'pod', 'namespace', 'service.name']
  #         mappedTags: [{key: 'service.name', value: 'service'}]
  #         mapTagNamesEnabled: true
  #         spanStartTimeShift: '-1h'
  #         spanEndTimeShift: '1h'
  #         filterByTraceID: true
  #         filterBySpanID: true
  #       serviceMap:
  #         datasourceUid: prometheus
  #       nodeGraph:
  #         enabled: true
  #       search:
  #         hide: false

  # Dashboard Providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: 'kubernetes'
          orgId: 1
          folder: 'Kubernetes'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: 'network'
          orgId: 1
          folder: 'Network'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/network
        - name: 'storage'
          orgId: 1
          folder: 'Storage'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/storage

  # Dashboards
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 13770
        revision: 1
        datasource: Prometheus
      proxmox-overview:
        gnetId: 10347
        revision: 5
        datasource: Prometheus
      kubernetes-capacity-planning:
        gnetId: 5309
        revision: 1
        datasource: Prometheus
      kubernetes-cluster-autoscaler:
        gnetId: 3831
        revision: 1
        datasource: Prometheus
      etcd-cluster:
        gnetId: 9733
        revision: 3
        datasource: Prometheus
      kubernetes-pv-usage:
        gnetId: 13646
        revision: 2
        datasource: Prometheus

    kubernetes:
      k8s-node-rsrc-use:
        gnetId: 8171
        revision: 1
        datasource: Prometheus
      logs-dashboard:
        gnetId: 12611
        revision: 1
        datasource: Loki
      kubernetes-apiserver:
        gnetId: 12006
        revision: 1
        datasource: Prometheus
      kubelet-monitoring:
        gnetId: 14282
        revision: 1
        datasource: Prometheus
      node-exporter-full:
        gnetId: 1860
        revision: 31
        datasource: Prometheus
      kubernetes-cluster-monitoring-detailed:
        gnetId: 8588
        revision: 1
        datasource: Prometheus
      kubernetes-pod-monitoring:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      kubernetes-workload:
        gnetId: 15758
        revision: 1
        datasource: Prometheus
      kubernetes-controller-manager:
        gnetId: 12110
        revision: 1
        datasource: Prometheus
      kubernetes-scheduler:
        gnetId: 12130
        revision: 1
        datasource: Prometheus

    network:
      kubernetes-network-monitoring:
        gnetId: 12125
        revision: 1
        datasource: Prometheus
      nginx-ingress-controller:
        gnetId: 9614
        revision: 1
        datasource: Prometheus
      cilium-overview:
        gnetId: 6658
        revision: 1
        datasource: Prometheus

    storage:
      ceph-cluster:
        gnetId: 2842
        revision: 17
        datasource: Prometheus
      ceph-pools:
        gnetId: 5336
        revision: 9
        datasource: Prometheus
      kubernetes-persistent-volumes:
        gnetId: 13646
        revision: 2
        datasource: Prometheus

# ================================
# Additional Exporters
# ================================
nodeExporter:
  enabled: true
  priorityClassName: system-node-critical
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

kubeStateMetrics:
  enabled: true
  selfMonitor:
    enabled: true

# ================================
# Optional Components
# ================================
loki:
  enabled: false
