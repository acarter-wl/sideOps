grafana:
  # Basic configuration
  fullnameOverride: grafana

  # If you're using Ingress
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      # Add your specific ingress annotations here
      kubernetes.io/tls-acme: "true"
    hosts:
      - grafana.wakkalabs.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.wakkalabs.com

  # Admin user configuration
  # Create this secret separately or use Helm secrets
  admin:
    existingSecret: grafana-admin-credentials
    userKey: admin-user
    passwordKey: admin-password

  # Grafana configuration
  grafana.ini:
    server:
      root_url: https://grafana.wakkalabs.com

    # Authentication configuration
    auth:
      signout_redirect_url: https://auth.wakkalabs.com/application/o/grafana/end-session/
      oauth_auto_login: true
      disable_login_form: true # Optional: disable the login form completely

    auth.basic:
      enabled: false # Disable basic authentication

    auth.generic_oauth:
      name: authentik
      enabled: true
      client_id: ${OAUTH_CLIENT_ID} # Will be pulled from environment variable
      client_secret: ${OAUTH_CLIENT_SECRET} # Will be pulled from environment variable
      scopes: openid profile email
      auth_url: https://auth.wakkalabs.com/application/o/authorize/
      token_url: https://auth.wakkalabs.com/application/o/token/
      api_url: https://auth.wakkalabs.com/application/o/userinfo/

      # Map Authentik groups to Grafana roles
      role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
      allow_sign_up: true

  # Environment variables - create these secrets separately
  envFromSecret: grafana-oauth-credentials

  # Additional volumeMounts and volumes if needed
  extraVolumeMounts: []
  extraVolumes: []

  # Additional configurations as needed
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
