alertmanager:
  persistentVolume:
    enabled: true
  replicas: 2

compactor:
  persistentVolume:
    size: 50Gi

distributor:
  replicas: 3
ingester:
  persistentVolume:
    size: 75Gi
  replicas: 3

admin-cache:
  enabled: true
  replicas: 3

chunks-cache:
  enabled: true
  replicas: 3

index-cache:
  enabled: true
  replicas: 3

metadata-cache:
  enabled: true
  replicas: 3

results-cache:
  enabled: true
  replicas: 3

minio:
  enabled: true

# Add S3 storage configuration for MinIO
storage:
  backend: s3
  s3:
    endpoint: mimir-minio.monitoring.svc.cluster.local:9000
    insecure: true
    bucket_name: blocks
    access_key_id: grafana-mimir
    secret_access_key: supersecret
  alertmanager:
    backend: s3
    s3:
      endpoint: mimir-minio.monitoring.svc.cluster.local:9000
      insecure: true
      bucket_name: alertmanager
      access_key_id: grafana-mimir
      secret_access_key: supersecret
  ruler:
    backend: s3
    s3:
      endpoint: mimir-minio.monitoring.svc.cluster.local:9000
      insecure: true
      bucket_name: ruler
      access_key_id: grafana-mimir
      secret_access_key: supersecret

overrides_exporter:
  replicas: 1

querier:
  replicas: 1

query_frontend:
  replicas: 1

ruler:
  replicas: 1
  resources:
    limits:
      memory: 2.8Gi
    requests:
      cpu: 1
      memory: 2Gi

store_gateway:
  persistentVolume:
    size: 100Gi
  replicas: 3

nginx:
  replicas: 1

admin_api:
  replicas: 1

gateway:
  replicas: 1

# Increase limits to handle high cardinality
limits:
  ingestion_rate: 100000 # Distributor settings for ingestion rate limits
  distributor:
    ingestion_rate_limit: 10000000
    ingestion_burst_size: 20000000000
  ingestion_burst_size: 20000000
  max_global_series_per_user: 1000000
  max_global_samples_per_user: 100000000

ingester_limits:
  max_series_per_user: 1000000
  max_samples_per_user: 10000000
