global:
  clusterDomain: cluster.local # Default domain unless you really changed it manually

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi

  tempoConfig:
    usage_report:
      reporting_enabled: false
    search_enabled: true
    metrics_generator:
      registry:
        external_labels:
          source: tempo
          cluster: talos-cluster
      storage:
        path: /var/tempo/generator/wal
        remote_write:
          - url: ttp://victoria-metrics-k8s-stack-victoria-metrics.monitoring.svc.cluster.local:8428
            send_exemplars: true
    storage:
      trace:
        backend: local
        wal:
          path: /var/tempo/wal
        local:
          path: /var/tempo/blocks
    server:
      http_listen_port: 3100
    distributor:
      receivers:
        jaeger:
          protocols:
            thrift_http:
              endpoint: 0.0.0.0:14268
            grpc:
              endpoint: 0.0.0.0:14250
            thrift_binary:
              endpoint: 0.0.0.0:6832
            thrift_compact:
              endpoint: 0.0.0.0:6831
        zipkin:
          endpoint: 0.0.0.0:9411
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
    ingester:
      trace_idle_period: 10s
      max_block_bytes: 1048576 # 1MB
      max_block_duration: 5m

persistence:
  enabled: true
  storageClass: ceph-block
  accessModes:
    - ReadWriteOnce
  size: 50Gi

service:
  type: ClusterIP
  port: 3100
  annotations: {}
  labels: {}

serviceMonitor:
  enabled: true
  interval: 30s
  labels:
    release: kube-prometheus-stack

extraEnv:
  - name: JAEGER_AGENT_TAGS
    value: "cluster=kubernetes"

# Integration with Grafana
traces:
  otlp:
    grpc:
      enabled: true
    http:
      enabled: true
  zipkin:
    enabled: true
  jaeger:
    thriftHttp:
      enabled: true

# OpenTelemetry Collector config
opentelemetry-collector:
  enabled: true
  mode: deployment
  replicaCount: 1
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 25
    exporters:
      logging:
        verbosity: detailed
      otlp:
        endpoint: tempo:4317
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [ otlp ]
          processors: [ memory_limiter, batch ]
          exporters: [ otlp ]
