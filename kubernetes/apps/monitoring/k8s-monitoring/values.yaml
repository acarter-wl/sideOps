---
# Values file for k8s-monitoring chart with journal paths adjusted for Talos Linux
cluster:
  name: "kubernetes"

global:
  scrapeInterval: 30s
  maxCacheSize: 100000

# Define destinations where telemetry will be sent
destinations:
  - name: "lokistack"
    type: "loki"
    loki:
      url: "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
  - name: "prometheusstack"
    type: "prometheus"
    prometheus:
      url: "http://prometheus.monitoring.svc.cluster.local:9090/api/v1/write"

# Enable cluster metrics collection
clusterMetrics:
  enabled: true
  destinations: [ "prometheusstack" ]

# Enable cluster events collection
clusterEvents:
  enabled: true
  destinations: [ "lokistack" ]

# Enable node logs collection (with Talos Linux specific paths)
nodeLogs:
  enabled: true
  destinations: [ "lokistack" ]

  # Remove the journal configuration that's causing the error
  config:
    # Talos doesn't use the standard journal path
    journal:
      enabled: false

    # Instead, use direct file paths for Talos logs
    targets:
      talos_logs:
        enabled: true
        paths:
          - /var/log/pods/*/*/*.log
          # Do NOT include /var/log/journal/*.journal as it doesn't exist

          # Enable pod logs collection
podLogs:
  enabled: true
  destinations: [ "lokistack" ]

# Enable Prometheus operator objects integration
prometheusOperatorObjects:
  enabled: true
  destinations: [ "prometheusstack" ]

# IMPORTANT: Enable the alloy-metrics collector
# This is required for clusterMetrics to work
alloy-metrics:
  enabled: true
  controller:
    type: statefulset
    replicas: 1
    tolerations:
      - effect: NoSchedule
        operator: Exists
      # Add Talos control plane tolerations
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

# Configure the alloy-logs DaemonSet for Talos
alloy-logs:
  enabled: true
  controller:
    type: daemonset
    tolerations:
      - effect: NoSchedule
        operator: Exists
      # Add Talos control plane tolerations
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

  # Custom configuration for Alloy on Talos Linux
  extraConfig: |
    loki.relabel "kubernetes_logs" {
      forward_to = [loki.process.kubernetes_logs.receiver]

      rule {
        source_labels = ["__meta_kubernetes_pod_node_name"]
        target_label = "node_name"
      }
      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        target_label = "namespace"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label = "pod"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label = "container"
      }
    }

    loki.process "kubernetes_logs" {
      forward_to = [loki.write.lokistack.receiver]

      stage.json {
        expressions = {
          log = "",
          stream = "",
          time = "",
        }
      }
    }

    loki.source.file "kubernetes_logs" {
      targets = discovery.kubernetes.pods.targets
      forward_to = [loki.relabel.kubernetes_logs.receiver]
    }

    loki.write "lokistack" {
      endpoint {
        url = "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
      }
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }

  # Mount locations specific to Talos Linux
  alloy:
    mounts:
      varlog: true
      dockercontainers: false # Talos uses containerd, not Docker

# Enable other collectors
alloy-singleton:
  enabled: true
  controller:
    type: deployment
    replicas: 1
    tolerations:
      - effect: NoSchedule
        operator: Exists
      # Add Talos control plane tolerations
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

# Self-reporting can be disabled if desired
selfReporting:
  enabled: false
