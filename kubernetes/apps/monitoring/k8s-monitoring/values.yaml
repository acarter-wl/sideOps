---
cluster:
  name: "talos-cluster" # Your cluster name

global:
  scrapeInterval: 30s
  maxCacheSize: 100000

# Define destinations where telemetry will be sent
# The valid destination types are: "loki", "prometheus", "otlp", or "pyroscope"
destinations:
  - name: "lokistack"
    type: "loki"
    loki:
      url: "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
  - name: "prometheusstack"
    type: "prometheus"
    prometheus:
      url: "http://prometheus.monitoring.svc.cluster.local:9090/api/v1/write"

# Enable cluster metrics collection
clusterMetrics:
  enabled: true
  destinations: [ "prometheusstack" ]

# Enable cluster events collection
clusterEvents:
  enabled: true
  destinations: [ "lokistack" ]

# Enable node logs collection (using Promtail functionality)
nodeLogs:
  enabled: true
  destinations: [ "lokistack" ]

  # Talos Linux specific configuration for node logs
  config:
    journal:
      enabled: true
      maxAge: 12h
      path: /var/log/journal

    targets:
      talos_logs:
        enabled: true
        paths:
          - /var/log/pods/*/*/*.log
          - /var/log/journal/*.journal

# Enable pod logs collection
podLogs:
  enabled: true
  destinations: [ "lokistack" ]

  # Configure the scrape config for pod logs
  config:
    relabelConfigs:
      - action: replace
        sourceLabels: [ "__meta_kubernetes_pod_node_name" ]
        targetLabel: "node_name"
      - action: replace
        sourceLabels: [ "__meta_kubernetes_namespace" ]
        targetLabel: "namespace"
      - action: replace
        sourceLabels: [ "__meta_kubernetes_pod_name" ]
        targetLabel: "pod"
      - action: replace
        sourceLabels: [ "__meta_kubernetes_pod_container_name" ]
        targetLabel: "container"

# Enable Prometheus operator objects integration
prometheusOperatorObjects:
  enabled: true
  destinations: [ "prometheusstack" ]

# Enable needed collectors
alloy-metrics:
  enabled: true
  controller:
    type: statefulset
    replicas: 1
    tolerations:
      - effect: NoSchedule
        operator: Exists

alloy-singleton:
  enabled: true
  controller:
    type: deployment
    replicas: 1
    tolerations:
      - effect: NoSchedule
        operator: Exists

alloy-logs:
  enabled: true
  controller:
    type: daemonset
    tolerations:
      - effect: NoSchedule
        operator: Exists

  # Mount locations specific to Talos Linux
  alloy:
    mounts:
      varlog: true
      dockercontainers: false # Talos uses containerd, not Docker

# Self-reporting can be disabled if desired
selfReporting:
  enabled: false
