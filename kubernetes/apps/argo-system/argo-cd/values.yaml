crds:
  install: true
global:
  domain: argo.wakkalabs.com
configs:
  params:
    server.insecure: true
  cm:
    # dex.config: |
    #   connectors:
    #     - type: oidc
    #       id: authentik
    #       name: authentik
    #       config:
    #         issuer: https://auth.wakkalabs.com/application/o/argocd/
    #         clientID: GHFrNg3pZTxyoxvzuut0q0Kr2HSkBBqX0rqINETT
    #         clientSecretEnv: DEX_AUTHENTIK_CLIENT_SECRET
    #         insecureEnableGroups: true
    #         scopes:
    #           - openid
    #           - profile
    #           - email
    #           - groups
    #         getUserInfo: true
    exec.enabled: true
    accounts.readonly: |
      apiKey: true
      enabled: true
      capabilities:
        - get
      accounts.admin: |
      apiKey: true
      enabled: true
      capabilities:
        - '*'
    statusbadge.enabled: true
    kustomize.buildOptions: --enable-alpha-plugins --enable-exec
    helm.valuesFileSchemes: secrets+gpg-import, secrets+gpg-import-kubernetes, secrets+age-import, secrets+age-import-kubernetes, secrets, secrets+literal, https
    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - '*'
    # rbac:
    #   scopes: '[groups]'
    #   groupClaim: groups
    #   policy.default: role:readonly
    #   policy.rules: |
    #     p, role:admin, *, *, *, allow
    #     g, ArgoCD Admins, role:admin
    # argocdServerAdminPassword: ENC[AES256_GCM,data:i+hlsJEnzDos2zNV0GF9y6gMpPmOUOHLB/MNSpxWmWklNK/+RIn5IPKex1mctKPMf58R9HY8Iy8+Enc=,iv:20mRTB0F31WBuaR3BAJYsZJuG8zoYm2p6sG8cb9KgkE=,tag:Xxnrr/3BoShAVgzfiE+dDg==,type:str]
    # webhook.github.secret: ENC[AES256_GCM,data:sx3ZQVwF4DD/GtRzNtxv8eTeoMwAdoa9NVqjoEhISTc=,iv:iq7cylQiS1C/WGXyyYfiTkQCKlN0paU1dbCXp3j8HIo=,tag:bzCGqsK4cx54qNbxqPxx7Q==,type:str]
    # dex.authentik.clientSecret: ENC[AES256_GCM,data:GYxIxDxVvvhNrPFsQwZg1guT0NfQJ46ulflm4218N+oMcnh1s1WoPEQQ7L9zn4w+HYKSYJhfKRU/uAbdoaqWpJtYyOffO1K/8PdVNgb8uXoHjA5x9+9/RQvyhwK22sKkJWhjAMc6i9kyqfYO2HDI9I5PNTTgFj5kAGJtNfSMjU4=,iv:o0TBV8LLAafDncc5jYhOk16ml18L9dygvsVpsX2zAE4=,tag:ZWdlz+nbdfMQHzyHxS0S6g==,type:str]
    # argocdServerAdminPasswordMtime: 2025-04-27T17:17:54
    # githubSecret: ENC[AES256_GCM,data:YCGpvFf0b0Ko+aq9BwK2YjOgLczxa3euRaR3PRegcjzU7lFJMfgJLJvFC3tkWpzhGqBTTtDddNWECXsCzWrSqjeVrq8GuV6JwxTWoQJOzyoQk4a59TPEV/vhVPUnFP1+A4dtkxV5IIprHfTwBLMO547fLwszY1VkTgNZEhbqhgkHdjZiXdzOEDtOmuMSjZzFhDuNm6epSw==,iv:p2k1ByEe3yhXAC/VNlrDfGz6dkTWi5sW00BNPzTJ/Hs=,tag:1zJIu3fJDGN3z6SJyYOAag==,type:str]
  metrics:
    enabled: true
    applicationLabels:
      enabled: true
    serviceMonitor:
      enabled: true
    additionalLabels:
      release: kube-prometheus-stack
dex:
  replicas: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    additionalLabels:
      release: kube-prometheus-stack
redis:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    additionalLabels:
      release: kube-prometheus-stack
server:
  replicas: 2
  allowAnyNamespace: true
  ingress:
    enabled: true
    ingressClassName: external
    annotations:
      external-dns.alpha.kubernetes.io/target: external.wakkalabs.com
    hostname: argo.wakkalabs.com
  metrics:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
notifications:
  replicas: 2
  metrics:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
repoServer:
  replicas: 2
  serviceAccount:
    create: true
    name: argocd-repo-server
  rbac:
    - apiGroups:
        - ""
      resources:
        - secrets
      verbs:
        - get
  env:
    - name: HELM_PLUGINS
      value: /custom-tools/helm-plugins/
    - name: HELM_SECRETS_CURL_PATH
      value: /custom-tools/curl
    - name: HELM_SECRETS_SOPS_PATH
      value: /custom-tools/sops
    - name: HELM_SECRETS_VALS_PATH
      value: /custom-tools/vals
    - name: HELM_SECRETS_KUBECTL_PATH
      value: /custom-tools/kubectl
    - name: HELM_SECRETS_BACKEND
      value: sops
    # https://github.com/jkroepke/helm-secrets/wiki/Security-in-shared-environments
    - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
      value: "false"
    - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
      value: "true"
    - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
      value: "false"
    - name: HELM_SECRETS_WRAPPER_ENABLED
      value: "true"
    - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
      value: "true"
    - name: HELM_SECRETS_HELM_PATH
      value: /usr/local/bin/helm
    # For age
    - name: SOPS_AGE_KEY_FILE
      value: /helm-secrets-private-keys/key.txt
  volumes:
    - name: custom-tools
      emptyDir: {}
    # kubectl create secret generic helm-secrets-private-keys --from-file=key.asc=assets/gpg/private2.gpg
    - name: helm-secrets-private-keys
      secret:
        secretName: helm-secrets-private-keys
  volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
    - mountPath: /usr/local/sbin/helm
      subPath: helm
      name: custom-tools
    - mountPath: /usr/local/bin/kustomize
      name: custom-tools
      subPath: kustomize
    - mountPath: /usr/local/bin/ksops
      name: custom-tools
      subPath: ksops
    - mountPath: /helm-secrets-private-keys/
      name: helm-secrets-private-keys
  initContainers:
    - name: gitops-tools
      image: ajaykumar4/gitops-tools:1.0.1
      imagePullPolicy: Always
      command:
        - sh
        - -ec
      args:
        - |
          mkdir -p /custom-tools/
          cp -rf /gitops-tools/* /custom-tools
          chmod +x /custom-tools/*
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
