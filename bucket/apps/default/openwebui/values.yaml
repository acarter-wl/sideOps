# Open WebUI Helm chart values

# Disable components
ollama:
  # -- Automatically install Ollama Helm chart from https://otwld.github.io/ollama-helm/. Use [Helm Values](https://github.com/otwld/ollama-helm/#helm-values) to configure
  enabled: true
  # -- If enabling embedded Ollama, update fullnameOverride to your desired Ollama name value, or else it will use the default ollama.name value from the Ollama chart
  fullnameOverride: "open-webui-ollama"

pipelines:
  # -- Automatically install Pipelines chart to extend Open WebUI functionality using Pipelines: https://github.com/open-webui/pipelines
  enabled: true
  # -- This section can be used to pass required environment variables to your pipelines (e.g. Langfuse hostname)
  extraEnvVars: []

tika:
  # -- Automatically install Apache Tika to extend Open WebUI
  enabled: true

websocket:
  # -- Enables websocket support in Open WebUI with env `ENABLE_WEBSOCKET_SUPPORT`
  enabled: true
  # -- Specifies the websocket manager to use with env `WEBSOCKET_MANAGER`: redis (default)
  manager: redis
  # -- Specifies the URL of the Redis instance for websocket communication. Template with `redis://[:<password>@]<hostname>:<port>/<db>`
  url: redis://open-webui-redis:6379/0

# Persistence configuration
persistence:
  enabled: true
  size: 40Gi
  # -- Use existingClaim if you want to re-use an existing Open WebUI PVC instead of creating a new one
  existingClaim: ""
  # -- Subdirectory of Open WebUI PVC to mount. Useful if root directory is not empty.
  subPath: ""
  # -- If using multiple replicas, you must update accessModes to ReadWriteOnly
  accessModes:
    - ReadWriteOnce
  storageClass: "ceph-block"
  selector: {}
  annotations: {}

# Redis configuration
redis:
  # -- Enable redis installation
  enabled: true
  # -- Redis name
  name: open-webui-redis
  # -- Redis labels
  labels: {}
  # -- Redis annotations
  annotations: {}
  # -- Redis pod
  pods:
    # -- Redis pod annotations
    annotations: {}
  # -- Redis image
  image:
    repository: redis
    tag: 8.0.0-alpine3.21
    pullPolicy: IfNotPresent
  # -- Redis command (overrides default)
  command: []
  # -- Redis arguments (overrides default)
  args: []
  # -- Redis resources
  resources: {}
  # -- Redis service
  service:
    # -- Redis container/target port
    containerPort: 6379
    # -- Redis service type
    type: ClusterIP
    # -- Redis service labels
    labels: {}
    # -- Redis service annotations
    annotations: {}
    # -- Redis service port
    port: 6379
    # -- Redis service node port. Valid only when type is `NodePort`
    nodePort: ""
  # -- Redis tolerations for pod assignment
  tolerations: []
  # -- Redis affinity for pod assignment
  affinity: {}
  # -- Redis security context
  securityContext: {}

# -- Deploys a Redis cluster with subchart 'redis' from bitnami
redis-cluster:
  # -- Enable Redis installation
  enabled: true
  # -- Redis cluster name (recommended to be 'open-webui-redis')
  # - In this case, redis url will be 'redis://open-webui-redis-master:6379/0' or 'redis://[:<password>@]open-webui-redis-master:6379/0'
  fullnameOverride: open-webui-redis
  # -- Redis Authentication
  auth:
    # -- Enable Redis authentication (disabled by default). For your security, we strongly suggest that you switch to 'auth.enabled=true'
    enabled: false
  # -- Replica configuration for the Redis cluster
  replica:
    # -- Number of Redis replica instances
    replicaCount: 2

# -- Value of cluster domain
clusterDomain: cluster.local

# General configuration
annotations: {}
podAnnotations: {}
podLabels: {}
replicaCount: 1
# -- Strategy for updating the workload manager: deployment or statefulset
strategy: {}

# -- Open WebUI image tags can be found here: https://github.com/open-webui/open-webui
image:
  repository: ghcr.io/open-webui/open-webui
  tag: ""
  pullPolicy: "IfNotPresent"

serviceAccount:
  enable: true
  name: ""
  annotations: {}
  automountServiceAccountToken: false

# -- Configure imagePullSecrets to use private registry
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry>
imagePullSecrets: []

# -- Probe for liveness of the Open WebUI container
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes>
livenessProbe: {}

# -- Probe for readiness of the Open WebUI container
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes>
readinessProbe: {}

# -- Probe for startup of the Open WebUI container
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes>
startupProbe: {}

resources: {}

copyAppData:
  resources: {}

managedCertificate:
  enabled: false

# Ingress configuration - disabled as we're using our own ingress.yaml
ingress:
  enabled: false
  class: "internal"
  # -- Use appropriate annotations for your Ingress controller, e.g., for NGINX:
  annotations: {}
  host: ""
  additionalHosts: []
  tls: false
  existingSecret: ""

# -- Node labels for pod assignment.
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Affinity for pod assignment
affinity: {}

# -- Topology Spread Constraints for pod assignment
topologySpreadConstraints: []

# -- HostAliases to be added to hosts-file of each container
hostAliases:
  - ip: "192.168.100.2" # Replace with your actual DNS server IP or Authentik service IP
    hostnames:
      - "auth.wakkalabs.com"

# -- Service values to expose Open WebUI pods to cluster
service:
  type: ClusterIP
  annotations: {}
  port: 80
  containerPort: 8080
  nodePort: ""
  labels: {}
  # loadBalancerClass can only be used with type: LoadBalancer
  # loadBalancerClass: "internal"

  # -- Enables the use of OpenAI APIs
enableOpenaiApi: true
# -- OpenAI base API URL to use. Defaults to the Pipelines service endpoint when Pipelines are enabled, and "https://api.openai.com/v1" if Pipelines are not enabled and this value is blank
openaiBaseApiUrl: "https://api.openai.com/v1"

# -- OpenAI base API URLs to use. Overwrites the value in openaiBaseApiUrl if set
openaiBaseApiUrls: []

# -- Env vars added to the Open WebUI deployment. Most up-to-date environment variables can be found here: https://docs.openwebui.com/getting-started/env-configuration/
extraEnvVars:
  - name: ENABLE_SIGNUP
    value: "false"
  - name: ENABLE_LOGIN_FORM
    value: "false"
  - name: ADMIN_EMAIL
    value: "acarter@wakkalabs.com"
  # Removed OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, OPENID_PROVIDER_URL, OAUTH_SCOPES, ENABLE_OAUTH_SIGNUP from here
  - name: ENABLE_OPENAI_API
    value: "true"
  - name: OPENAI_API_BASE_URL
    value: "https://openrouter.ai/api/v1"
  - name: OPENAI_API_KEY
    valueFrom:
      secretKeyRef:
        name: open-router-api-key
        key: OPEN_ROUTER_API_KEY

# -- Configure runtime class
# ref: <https://kubernetes.io/docs/concepts/containers/runtime-class/>
runtimeClassName: ""

# -- Configure container volume mounts
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/>
volumeMounts:
  initContainer: []
  container: []

# -- Additional init containers to add to the deployment/statefulset
# ref: <https://kubernetes.io/docs/concepts/workloads/pods/init-containers/>
extraInitContainers: []

# -- Configure pod volumes
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/>
volumes: []

# -- Configure pod security context
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container>
podSecurityContext: {}

# -- DNS configuration for the pod
dnsConfig:
  options:
    - name: ndots
      value: "5"
    - name: timeout
      value: "2"
    - name: attempts
      value: "3"

# -- Configure container security context
# ref: <https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-containe>
containerSecurityContext: {}

# SSO Configuration
sso:
  # -- **Enable SSO authentication globally** must enable to use SSO authentication
  enabled: true
  # -- Enable account creation when logging in with OAuth (distinct from regular signup)
  enableSignup: true
  # -- Allow logging into accounts that match email from OAuth provider (considered insecure)
  mergeAccountsByEmail: false
  # -- Enable OAuth role management through access token roles claim
  enableRoleManagement: false
  # -- Enable OAuth group management through access token groups claim
  enableGroupManagement: false

  oidc:
    # -- Enable OIDC authentication
    enabled: true
    # -- OIDC provider well known URL (ensure this is correct and consistent)
    providerUrl: "https://auth.wakkalabs.com/application/o/openwebui/.well-known/openid-configuration"
    # -- Use PKCE extension for added security
    usePkce: true
    # -- Configure HTTP timeout for OIDC requests
    httpTimeout: 30
    # -- Name of the provider to show on the UI
    providerName: "SSO"
    # -- Scopes to request (space-separated)
    scopes: "openid profile email"
    # -- If supported by the Helm chart, add clientId and clientSecret here
    clientId:
      valueFrom:
        secretKeyRef:
          name: open-webui-secret
          key: oidc-client-id
    clientSecret:
      valueFrom:
        secretKeyRef:
          name: open-webui-secret
          key: oidc-client-secret
    # -- Enable OAuth signup
    enableOauthSignup: true
